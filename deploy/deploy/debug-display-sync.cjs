const { Pool } = require('pg');\n\n// 數據庫配置\nconst pool = new Pool({\n  connectionString: process.env.DATABASE_URL || 'postgresql://postgres:password@localhost:5432/bet_database',\n  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false\n});\n\nasync function debugDisplaySync() {\n  console.log('🔍 開始調試開獎結果顯示同步問題...');\n  \n  try {\n    // 1. 查詢數據庫最新結果\n    console.log('\\n1. 查詢數據庫最新開獎結果:');\n    const dbResult = await pool.query(`\n      SELECT period, result, created_at \n      FROM result_history \n      ORDER BY created_at DESC \n      LIMIT 1\n    `);\n    \n    if (dbResult.rows.length > 0) {\n      const latest = dbResult.rows[0];\n      console.log(`   期號: ${latest.period}`);\n      console.log(`   結果: ${JSON.stringify(latest.result)}`);\n      console.log(`   時間: ${latest.created_at}`);\n      \n      // 檢查第6名是否為10號\n      const resultArray = Array.isArray(latest.result) ? latest.result : JSON.parse(latest.result);\n      console.log(`   第6名號碼: ${resultArray[5]} ${resultArray[5] === 10 ? '✅ 控制生效!' : '❌ 控制失效!'}`);  \n    } else {\n      console.log('   ❌ 沒有找到開獎記錄');\n    }\n    \n    // 2. 檢查justin111的最新注單\n    console.log('\\n2. 檢查justin111的最新注單:');\n    const betResult = await pool.query(`\n      SELECT \n        period, bet_type, bet_value, position, amount, odds,\n        win, win_amount, settled, created_at\n      FROM bet_history \n      WHERE username = 'justin111' \n      ORDER BY created_at DESC \n      LIMIT 3\n    `);\n    \n    betResult.rows.forEach((bet, index) => {\n      console.log(`   注單${index + 1}: 期號=${bet.period}, 類型=${bet.bet_type}, 值=${bet.bet_value}, 位置=${bet.position}`);\n      console.log(`           金額=${bet.amount}, 賠率=${bet.odds}, 中獎=${bet.win}, 獎金=${bet.win_amount}`);\n      console.log(`           已結算=${bet.settled}, 時間=${bet.created_at}`);\n    });\n    \n  } catch (error) {\n    console.error('❌ 調試過程出錯:', error);\n  } finally {\n    await pool.end();\n  }\n}\n\n// 運行調試\ndebugDisplaySync(); 